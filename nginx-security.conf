# Security headers configuration for nginx

# HSTS (HTTP Strict Transport Security)
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Content Security Policy
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com https://www.gstatic.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.fda.gov https://clinicaltrials.gov https://firebase.googleapis.com; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;

# X-Frame-Options
add_header X-Frame-Options "DENY" always;

# X-Content-Type-Options
add_header X-Content-Type-Options "nosniff" always;

# X-XSS-Protection
add_header X-XSS-Protection "1; mode=block" always;

# Referrer Policy
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Permissions Policy
add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=(), vibrate=(), fullscreen=(self), sync-xhr=()" always;

# Cross-Origin Embedder Policy
add_header Cross-Origin-Embedder-Policy "require-corp" always;

# Cross-Origin Opener Policy
add_header Cross-Origin-Opener-Policy "same-origin" always;

# Cross-Origin Resource Policy
add_header Cross-Origin-Resource-Policy "same-origin" always;

# Remove server information
more_clear_headers Server;
more_clear_headers X-Powered-By;

# Prevent access to hidden files
location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
}

# Prevent access to backup files
location ~ ~$ {
    deny all;
    access_log off;
    log_not_found off;
}

# Prevent access to configuration files
location ~* \.(conf|config|cfg|ini|log|bak|backup|old|orig|original|tmp|temp|swp|swo)$ {
    deny all;
    access_log off;
    log_not_found off;
}

# Prevent access to version control files
location ~ /\.(git|svn|hg|bzr) {
    deny all;
    access_log off;
    log_not_found off;
}

# Prevent access to package manager files
location ~* \.(lock|json|yml|yaml)$ {
    location ~* package(-lock)?\.json$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    location ~* yarn\.lock$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    location ~* composer\.(json|lock)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Rate limiting for different endpoints
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=search:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=api_strict:10m rate=100r/m;

# Apply rate limiting to specific locations
location /api/auth/login {
    limit_req zone=login burst=3 nodelay;
}

location /api/search {
    limit_req zone=search burst=10 nodelay;
}

location /api/ {
    limit_req zone=api_strict burst=50 nodelay;
}

# Block common attack patterns
location ~* \.(php|asp|aspx|jsp|cgi|pl|py)$ {
    deny all;
    access_log off;
    log_not_found off;
}

# Block SQL injection attempts
if ($args ~* "(union|select|insert|delete|update|drop|create|alter|exec|script).*\(") {
    return 403;
}

# Block XSS attempts
if ($args ~* "(<|%3C).*script.*(>|%3E)") {
    return 403;
}

# Block directory traversal attempts
if ($args ~* "\.\.[\/\\]") {
    return 403;
}

# Block null byte injection
if ($args ~* "\x00") {
    return 403;
}

# Block common exploit attempts
if ($request_uri ~* "(\<|%3C).*script.*(\>|%3E)") {
    return 403;
}

if ($request_uri ~* "\.\.[\/\\]") {
    return 403;
}

if ($request_uri ~* "\x00") {
    return 403;
}

# Block user agents
if ($http_user_agent ~* "(nmap|nikto|wikto|sf|sqlmap|bsqlbf|w3af|acunetix|havij|appscan)") {
    return 403;
}

# Block empty user agents
if ($http_user_agent = "") {
    return 403;
}

# Limit request size
client_max_body_size 10M;
client_body_buffer_size 128k;
client_header_buffer_size 1k;
large_client_header_buffers 4 4k;

# Timeout settings
client_body_timeout 12;
client_header_timeout 12;
keepalive_timeout 15;
send_timeout 10;

# Buffer overflow protection
client_body_buffer_size 128k;
client_header_buffer_size 1k;
client_max_body_size 10m;
large_client_header_buffers 2 1k;